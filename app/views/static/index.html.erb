
    <div class="mb-5">
        <h1 class="mb-4">Inventory Cost Calculator</h1>
        <form id="inventoryForm" class="mb-4">
            <div class="mb-3">
                <label for="numUnits" class="form-label">Number of Units Sold:</label>
                <input type="number" id="numUnits" class="form-control" required>
            </div>

            <h2>Inventory Batches</h2>
            <div id="inventoryBatches" class="mb-4">
                <div class="batch mb-3">
                    <label class="form-label">Units:</label>
                    <input type="number" class="form-control d-inline-block mb-2" style="width: 150px;" required>
                    <label class="form-label">Cost per Unit:</label>
                    <input type="number" class="form-control d-inline-block" style="width: 150px;" required>
                </div>
            </div>

            <button type="button" class="btn btn-outline-primary mb-3" onclick="addBatch()">Add Another Batch</button>
        </form>

        <h2>Results</h2>
        <div id="results">
            <p>FIFO Cost: <span id="fifoResult">0.00</span></p>
            <p>LIFO Cost: <span id="lifoResult">0.00</span></p>
            <p>Average Cost: <span id="averageResult">0.00</span></p>
        </div>
    </div>

    <hr>

    <div class="mb-5">
        <h1 class="mb-4">Depreciation Calculator</h1>
        <form id="depreciationCalculatorForm" class="mb-4">
            <div class="mb-3">
                <label for="depreciationInitialCost" class="form-label">Initial Cost:</label>
                <input type="number" id="depreciationInitialCost" class="form-control" required>
            </div>

            <div class="mb-3">
                <label for="depreciationSalvageValue" class="form-label">Salvage Value (for Straight-Line):</label>
                <input type="number" id="depreciationSalvageValue" class="form-control">
            </div>

            <div class="mb-3">
                <label for="depreciationUsefulLife" class="form-label">Useful Life (years):</label>
                <input type="number" id="depreciationUsefulLife" class="form-control" required>
            </div>

            <button type="button" class="btn btn-outline-primary" onclick="calculateDepreciation()">Calculate Depreciation</button>
        </form>

        <h2>Results</h2>
        <div id="depreciationResultsContainer">
            <h3>Straight-Line Depreciation</h3>
            <table class="table table-bordered" id="straightLineDepreciationTable">
                <thead class="table-dark">
                    <tr>
                        <th>Year</th>
                        <th>Depreciation Expense</th>
                        <th>Accumulated Depreciation</th>
                        <th>Book Value</th>
                    </tr>
                </thead>
            </table>

            <h3>Accelerated Depreciation (Double Declining Balance)</h3>
            <table class="table table-bordered" id="acceleratedDepreciationTable">
                <thead class="table-dark">
                    <tr>
                        <th>Year</th>
                        <th>Depreciation Expense</th>
                        <th>Accumulated Depreciation</th>
                        <th>Book Value</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>

    <div class='mb-5'>
    <h1>PARTIAL YEAR Depreciation Schedule Calculator</h1>
    <form id="depreciationFormCustom" class="mb-4">
        <div class="mb-3">
            <label for="initialCostCustom" class="form-label">Initial Cost:</label>
            <input type="number" id="initialCostCustom" class="form-control" required>
        </div>
        <div class="mb-3">
            <label for="salvageValueCustom" class="form-label">Salvage Value (for Straight-Line):</label>
            <input type="number" id="salvageValueCustom" class="form-control" required>
        </div>
        <div class="mb-3">
            <label for="usefulLifeMonthsCustom" class="form-label">Useful Life (months):</label>
            <input type="number" id="usefulLifeMonthsCustom" class="form-control" required>
        </div>
        <div class="mb-3">
            <label for="purchaseMonthCustom" class="form-label">Month of Purchase (1 for January, 2 for February, etc.):</label>
            <input type="number" id="purchaseMonthCustom" class="form-control" required min="1" max="12">
        </div>
        <button type="button" class="btn btn-outline-primary" onclick="calculateDepreciationCustom()">Calculate Depreciation</button>
    </form>

    <h2>Straight-Line Depreciation Schedule</h2>
    <table class="table table-bordered" id="straightLineTableCustom">
        <thead class="table-dark">
            <tr>
                <th>Year</th>
                <th>Depreciation Expense</th>
                <th>Accumulated Depreciation</th>
                <th>Book Value</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <h2>Double Declining Balance Depreciation Schedule</h2>
    <table class="table table-bordered" id="doubleDecliningTableCustom">
        <thead class="table-dark">
            <tr>
                <th>Year</th>
                <th>Depreciation Expense</th>
                <th>Accumulated Depreciation</th>
                <th>Book Value</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    </div>
    <hr>

    <div class="mb-5">
        <h1 class="mb-4">Return on Assets (ROA) Calculator</h1>
        <div class="mb-3">
            <label for="netIncome" class="form-label">Net Income:</label>
            <input type="number" id="netIncome" class="form-control" step="0.01">
        </div>

        <div class="mb-3">
            <label for="assetsYearX" class="form-label">Assets (Year X):</label>
            <input type="number" id="assetsYearX" class="form-control" step="0.01">
        </div>

        <div class="mb-3">
            <label for="assetsYearY" class="form-label">Assets (Year Y):</label>
            <input type="number" id="assetsYearY" class="form-control" step="0.01">
        </div>

        <button class="btn btn-outline-primary mb-3" onclick="calculateROA()">Calculate ROA</button>
        <h2>Return on Assets (ROA): <span id="roaResult">N/A</span>%</h2>
    </div>

    <hr>

    <div class="mb-5">
        <h1 class="mb-4">Tax and NOPAT Calculator</h1>
        <div class="mb-3">
            <label for="operatingIncome" class="form-label">Operating Income:</label>
            <input type="number" id="operatingIncome" class="form-control" step="0.01">
        </div>

        <div class="mb-3">
            <label for="netInterest" class="form-label">Net Interest:</label>
            <input type="number" id="netInterest" class="form-control" step="0.01">
        </div>

        <div class="mb-3">
            <label for="incomeTaxExpense" class="form-label">Income Tax Expense:</label>
            <input type="number" id="incomeTaxExpense" class="form-control" step="0.01">
        </div>

        <div class="mb-3">
            <label for="netEarnings" class="form-label">Net Earnings:</label>
            <input type="number" id="netEarnings" class="form-control" step="0.01">
        </div>

        <div class="mb-3">
            <label for="assumedTaxRate" class="form-label">Assumed Tax Rate (%):</label>
            <input type="number" id="assumedTaxRate" class="form-control" step="0.01">
        </div>

        <button class="btn btn-outline-primary mb-3" onclick="calculateTaxRateAndNOPAT()">Calculate</button>
        <h2>Tax on Operating Profit (using Assumed Rate): <span id="taxAmountResult">N/A</span></h2>
        <h2>Net Operating Profit After Tax (NOPAT): <span id="nopatResult">N/A</span></h2>
    </div>

    <hr>

    <h1>Net Operating Assets (NOA) Breakdown</h1>
    <p>NOA = Operating Assets - Operating Liabilities</p>

    <h2>Non-Operating Assets:</h2>
    <ul>
        <li>Cash and cash equivalents</li>
        <li>Short-term investments</li>
        <li>Long-term investments</li>
        <li>Deferred income taxes – net</li>
    </ul>

    <h2>Operating Assets:</h2>
    <ul>
        <li>Merchandise inventory – net</li>
        <li>Other current assets</li>
        <li>Property, less accumulated depreciation</li>
        <li>Operating lease right of use assets</li>
        <li>Other assets</li>
    </ul>

    <h2>Operating Liabilities:</h2>
    <ul>
        <li>Current operating lease liabilities</li>
        <li>Accounts payable</li>
        <li>Accrued compensation and employee benefits</li>
        <li>Deferred revenue</li>
        <li>Other current liabilities</li>
        <li>Noncurrent operating lease liabilities</li>
    </ul>

    <h2>Non-Operating Liabilities:</h2>
    <ul>
        <li>Current maturities of long-term debt</li>
        <li>Long-term debt, excluding current maturities</li>
        <li>Deferred revenue - Lowe's protection plans</li>
        <li>Other liabilities</li>
    </ul>

    <hr>
    <h2>Formulas</h2>
    <p>RNOA = (Return on Net Operating Assets) = NOPAT / Avg. NOA</p>
    <p>ROE = Operating Return + Nonoperating Return</p>
    <p>Nonoperating Return = ROE - Operating Return</p>


    <script>
        function calculateDepreciationCustom() {
            const initialCost = parseFloat(document.getElementById('initialCostCustom').value);
            const salvageValue = parseFloat(document.getElementById('salvageValueCustom').value);
            const usefulLifeMonths = parseFloat(document.getElementById('usefulLifeMonthsCustom').value);
            const purchaseMonth = parseInt(document.getElementById('purchaseMonthCustom').value);

            if (isNaN(initialCost) || isNaN(salvageValue) || isNaN(usefulLifeMonths) || isNaN(purchaseMonth)) {
                alert("Please enter valid inputs for all fields.");
                return;
            }

            const usefulLifeYears = usefulLifeMonths / 12; // Convert useful life in months to years
            const partialYearFactor = (12 - (purchaseMonth - 1)) / 12; // Partial year from purchase month to end of the year

            // Calculate straight-line depreciation schedule
            const fullYearDepreciationSL = (initialCost - salvageValue) / usefulLifeYears;
            let accumulatedDepreciationSL = 0;
            let bookValueSL = initialCost;

            let straightLineTableBody = document.querySelector('#straightLineTableCustom tbody');
            straightLineTableBody.innerHTML = ''; // Clear previous data

            // Year 0: Partial year
            let year0DepreciationSL = fullYearDepreciationSL * partialYearFactor;
            accumulatedDepreciationSL += year0DepreciationSL;
            bookValueSL -= year0DepreciationSL;

            straightLineTableBody.innerHTML += `
                <tr>
                    <td>Year 0 (Partial)</td>
                    <td>${year0DepreciationSL.toFixed(2)}</td>
                    <td>${accumulatedDepreciationSL.toFixed(2)}</td>
                    <td>${bookValueSL.toFixed(2)}</td>
                </tr>
            `;

            // Full subsequent years, adjusting the last year
            let lastYearDepreciationSL = fullYearDepreciationSL - (fullYearDepreciationSL * partialYearFactor);
            for (let year = 1; year <= Math.floor(usefulLifeYears); year++) {
                let depreciationExpense = year === Math.floor(usefulLifeYears) ? lastYearDepreciationSL : fullYearDepreciationSL;
                accumulatedDepreciationSL += depreciationExpense;
                bookValueSL -= depreciationExpense;
                if (bookValueSL < salvageValue) {
                    bookValueSL = salvageValue; // Ensure book value does not go below salvage value
                }

                straightLineTableBody.innerHTML += `
                    <tr>
                        <td>Year ${year}</td>
                        <td>${depreciationExpense.toFixed(2)}</td>
                        <td>${accumulatedDepreciationSL.toFixed(2)}</td>
                        <td>${bookValueSL.toFixed(2)}</td>
                    </tr>
                `;
            }

            // Calculate double declining balance depreciation schedule
            const doubleDecliningRate = (2 / usefulLifeYears);
            let accumulatedDepreciationDDB = 0;
            let bookValueDDB = initialCost;

            let doubleDecliningTableBody = document.querySelector('#doubleDecliningTableCustom tbody');
            doubleDecliningTableBody.innerHTML = ''; // Clear previous data

            // Year 0: Partial year
            let year0DepreciationDDB = bookValueDDB * doubleDecliningRate * partialYearFactor;
            accumulatedDepreciationDDB += year0DepreciationDDB;
            bookValueDDB -= year0DepreciationDDB;

            doubleDecliningTableBody.innerHTML += `
                <tr>
                    <td>Year 0 (Partial)</td>
                    <td>${year0DepreciationDDB.toFixed(2)}</td>
                    <td>${accumulatedDepreciationDDB.toFixed(2)}</td>
                    <td>${bookValueDDB.toFixed(2)}</td>
                </tr>
            `;

            // Full subsequent years
            for (let year = 1; year <= Math.floor(usefulLifeYears); year++) {
                let depreciationExpense = bookValueDDB * doubleDecliningRate;
                if (bookValueDDB - depreciationExpense < salvageValue) {
                    depreciationExpense = bookValueDDB - salvageValue; // Adjust to prevent going below salvage value
                }
                accumulatedDepreciationDDB += depreciationExpense;
                bookValueDDB -= depreciationExpense;

                doubleDecliningTableBody.innerHTML += `
                    <tr>
                        <td>Year ${year}</td>
                        <td>${depreciationExpense.toFixed(2)}</td>
                        <td>${accumulatedDepreciationDDB.toFixed(2)}</td>
                        <td>${bookValueDDB.toFixed(2)}</td>
                    </tr>
                `;

                if (bookValueDDB <= salvageValue) {
                    bookValueDDB = salvageValue; // Ensure book value does not go below salvage value
                    break;
                }
            }
        }
    </script>